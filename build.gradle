import groovy.json.JsonSlurper
import org.gradle.internal.os.OperatingSystem

buildscript {
    repositories {
        //mavenLocal()
        mavenCentral()
        //jcenter()
        maven { url "http://repo.spring.io/plugins-release" }
      //  maven { url "http://repo.spring.io/milestone" }
        maven { url "https://plugins.gradle.org/m2/" }
    }
    dependencies {
        classpath "org.sonarsource.scanner.gradle:sonarqube-gradle-plugin:2.1"
        classpath "net.ltgt.gradle:gradle-apt-plugin:0.9"
        classpath "org.springframework.boot:spring-boot-gradle-plugin:${spring_boot_version}"
        classpath "org.springframework.build.gradle:propdeps-plugin:0.0.7"
        //classpath "com.moowork.gradle:gradle-node-plugin:1.1.1"
        classpath "io.spring.gradle:dependency-management-plugin:0.6.1.RELEASE"
        //jhipster-needle-gradle-buildscript-dependency - JHipster will add additional gradle build script plugins here
    }
}

apply plugin: 'java'
sourceCompatibility=1.8
targetCompatibility=1.8
apply plugin: 'maven'
//apply plugin: 'org.springframework.boot'
//apply plugin: 'war'
apply plugin: 'propdeps'
apply plugin: 'idea'
//apply plugin: 'com.moowork.node'
//apply plugin: 'com.moowork.gulp'
apply plugin: 'io.spring.dependency-management'
//defaultTasks 'bootRun'

defaultTasks 'build'


idea {

    project {
        //if you want to set specific jdk and language level
        jdkName = '1.8'
        languageLevel = '1.8'

        //you can configure the VCS used by the project
        vcs = 'Git'
    }

    module {
        // if you hate browsing Javadoc
        downloadJavadoc = false

        // and love reading sources :)
        downloadSources = false
    }
}

test {
    include '**/*UnitTest*'
    include '**/*IntTest*'

    // uncomment if the tests reports are not generated
    // see https://github.com/jhipster/generator-jhipster/pull/2771 and https://github.com/jhipster/generator-jhipster/pull/4484
    // ignoreFailures true
    reports.html.enabled = false
}

task testReport(type: TestReport) {
    destinationDir = file("$buildDir/reports/tests")
    reportOn test
}

group = 'com.liferay'
version = '6.3'

description = ''


repositories {

}

allprojects {
    apply plugin: 'java'
    repositories {
	    mavenCentral()
	    //jcenter()
	    //maven { url 'http://repo.spring.io/milestone' }
	    //maven { url 'http://repo.spring.io/snapshot' }
	    //maven { url 'https://repository.jboss.org/nexus/content/repositories/releases' }
	    //maven { url 'https://oss.sonatype.org/content/repositories/releases' }
	    //maven { url 'https://oss.sonatype.org/content/repositories/snapshots' }
	    //maven { url 'http://repo.maven.apache.org/maven2' }
      //mavenLocal()
    }

   dependencies {

       compile "io.github.jhipster:jhipster:${jhipster_server_version}"
       compile "io.dropwizard.metrics:metrics-core:${metrics_version}"
       compile "io.dropwizard.metrics:metrics-jvm:${metrics_version}"
       compile "io.dropwizard.metrics:metrics-servlet:${metrics_version}"
       compile "io.dropwizard.metrics:metrics-json:${metrics_version}"
       compile "io.dropwizard.metrics:metrics-servlets:${metrics_version}"
       compile ("net.logstash.logback:logstash-logback-encoder:${logstash_logback_encoder_version}") {
          exclude(module: 'ch.qos.logback')
       }
       compile "com.fasterxml.jackson.datatype:jackson-datatype-json-org:${jackson_version}"
       compile "com.fasterxml.jackson.datatype:jackson-datatype-hppc:${jackson_version}"
       compile "com.fasterxml.jackson.datatype:jackson-datatype-jsr310:${jackson_version}"
       compile "com.fasterxml.jackson.datatype:jackson-datatype-hibernate5:${jackson_version}"
       compile "com.fasterxml.jackson.core:jackson-annotations:${jackson_version}"
       compile "com.fasterxml.jackson.core:jackson-databind:${jackson_version}"
       compile ("com.ryantenney.metrics:metrics-spring:${metrics_spring_version}") {
          exclude(module: 'metrics-core')
          exclude(module: 'metrics-healthchecks')
       }
       compile "com.hazelcast:hazelcast:3.7.5"
       compile "com.hazelcast:hazelcast-hibernate52:${hazelcast_hibernate52_version}"
       compile "com.hazelcast:hazelcast-spring:3.7.5"
       compile "com.hazelcast:hazelcast-wm:${hazelcast_wm_version}"
       compile "javax.cache:cache-api:1.0.0"
       compile "org.hibernate:hibernate-core:${hibernate_version}"
       compile ("com.zaxxer:HikariCP:${hikaricp_version}") {
          exclude(module: 'tools')
       }
       compile "org.apache.commons:commons-lang3:${commons_lang_version}"
       compile "commons-io:commons-io:${commons_io_version}"
       compile "javax.transaction:javax.transaction-api"
       compile "org.apache.geronimo.javamail:geronimo-javamail_1.4_mail:${geronimo_javamail_1_4_mail_version}"
       compile "org.hibernate:hibernate-envers:5.0.11.Final"
       compile "org.hibernate:hibernate-validator"
       compile ("org.liquibase:liquibase-core:3.5.3") {
          exclude(module: 'jetty-servlet')
       }
       compile "com.mattbertolini:liquibase-slf4j:${liquibase_slf4j_version}"
       compile "org.springframework.boot:spring-boot-actuator:${spring_boot_version}"
       compile "org.springframework.boot:spring-boot-autoconfigure:${spring_boot_version}"
       compile "org.springframework.boot:spring-boot-loader-tools:${spring_boot_version}"
       compile "org.springframework.boot:spring-boot-starter-logging:${spring_boot_version}"
       compile "org.springframework.boot:spring-boot-starter-aop:${spring_boot_version}"
       compile "org.springframework.boot:spring-boot-starter-data-jpa:${spring_boot_version}"
       compile "org.springframework.boot:spring-boot-starter-data-elasticsearch:${spring_boot_version}"
       // needed to get around elasticsearch stacktrace about jna not found
       // https://github.com/elastic/elasticsearch/issues/13245
       compile "net.java.dev.jna:jna:4.2.2"
       compile "org.springframework.boot:spring-boot-starter-security:${spring_boot_version}"
       compile ("org.springframework.boot:spring-boot-starter-web:${spring_boot_version}") {
          exclude module: 'spring-boot-starter-tomcat'
       }
       compile "org.springframework.boot:spring-boot-starter-undertow:${spring_boot_version}"
       compile "org.springframework.boot:spring-boot-starter-thymeleaf:${spring_boot_version}"
       compile "org.springframework.boot:spring-boot-starter-cloud-connectors:${spring_boot_version}"
       compile ("org.springframework:spring-context-support") {
          exclude(module: 'quartz')
       }
       compile "org.springframework.security:spring-security-config:4.2.1.RELEASE"
       compile "org.springframework.security:spring-security-data:4.2.1.RELEASE"
       compile "org.springframework.security:spring-security-web:4.2.1.RELEASE"
       compile ("io.springfox:springfox-swagger2:${springfox_version}") {
          exclude module: 'mapstruct'
       }
       compile "io.springfox:springfox-bean-validators:${springfox_version}"
       compile "mysql:mysql-connector-java:5.1.40"
       compile "org.mapstruct:mapstruct-jdk8:${mapstruct_version}"
       testCompile "org.awaitility:awaitility:${awaitility_version}"
       testCompile "com.jayway.jsonpath:json-path:2.2.0"
       testCompile "org.springframework.boot:spring-boot-starter-test:${spring_boot_version}"
       testCompile "org.springframework.security:spring-security-test:4.2.1.RELEASE"
       testCompile "org.springframework.boot:spring-boot-test:${spring_boot_version}"
       testCompile "org.assertj:assertj-core:${assertj_version}"
       testCompile "junit:junit:4.12"
       testCompile "org.mockito:mockito-core:2.7.18"
       testCompile "com.mattbertolini:liquibase-slf4j:${liquibase_slf4j_version}"
       testCompile "org.hamcrest:hamcrest-library"
       testCompile "com.h2database:h2:1.4.194"
       //optional "org.springframework.boot:spring-boot-configuration-processor:${spring_boot_version}"

       compile "org.apache.struts:struts-core:1.3.10"

       compile "javax.portlet:portlet-api:2.0"
       compile "javax.servlet.jsp:jsp-api:2.2"
       compile "javax.servlet:javax.servlet-api:3.1.0"

       compile "org.apache.ant:ant:1.8.2"
       compile "freemarker:freemarker:2.3.9"
       compile "org.apache.axis:axis:1.4"
       
       compile fileTree(dir: '../lib/tmp', include: ['*.jar'])

    }
}

subprojects {


}

clean {
    delete "target"
}

task cleanResources(type: Delete) {
    delete 'build/resources'
}

task wrapper(type: Wrapper) {
    gradleVersion = '3.4'
}

task stage(dependsOn: 'bootRepackage') {
}

compileJava.dependsOn processResources
//processResources.dependsOn cleanResources,bootBuildInfo
//bootBuildInfo.mustRunAfter cleanResources
