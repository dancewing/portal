##
## Lucene Search
##
    #
    # Set the maximum number of clauses to allow in a boolean query. The default
    # is 1024.
    #
    #lucene.boolean.query.clause.max.size=1024

    #
    # Designate whether Lucene stores indexes in a file system or in RAM.
    #
    lucene.store.type=file
    #lucene.store.type=ram

    #
    # When using file store, turning this flag on will tell Lucene to use
    # MMapDirectory rather than using the default selection (SimpleFSDirectory
    # for Windows and NIOFSDirectory for Linux). It only makes sense to use
    # MMapDirectory for 64-bit JVM with a lot of memory. On a 32-bit JVM, if the
    # index files are huge, this could easily lead to an out of memory for
    # non-heap memory.
    #
    lucene.store.type.file.force.mmap=false

    #
    # Set the directory where Lucene indexes are stored. This is only referenced
    # if Lucene stores indexes in the file system.
    #
    lucene.dir=${liferay.home}/data/lucene/

    #
    # Input a class name that extends
    # com.liferay.portal.search.lucene.LuceneFileExtractor. This class is called
    # by Lucene to extract text from complex files so that they can be properly
    # indexed.
    #
    lucene.file.extractor=com.liferay.portal.search.lucene.LuceneFileExtractor

    #
    # The file extractor can sometimes return text that is not valid for Lucene.
    # This property expects a regular expression. Any character that does not
    # match the regular expression will be replaced with a blank space. Set an
    # empty regular expression to disable this feature.
    #
    lucene.file.extractor.regexp.strip=
    #lucene.file.extractor.regexp.strip=[\\d\\w]

    #
    # Set how often index updates will be committed. Set the batch size to
    # configure how many consecutive updates will trigger a commit. If the value
    # is 0, then the index will be committed on every update. Set the time
    # interval in milliseconds to configure how often to commit the index. The
    # time interval is not read unless the batch size is greater than 0 because
    # the time interval works in conjunction with the batch size to guarantee
    # that the index is committed after a specified time interval. Set the time
    # interval to 0 to disable committing the index by a time interval.
    #
    lucene.commit.batch.size=0
    lucene.commit.time.interval=0

    #
    # Set the maximum number of tokens generated by the analyzer while indexing.
    #
    lucene.analyzer.max.tokens=10000

    #
    # Set Lucene's buffer size in megabytes. Higher numbers mean indexing goes
    # faster but uses more memory.
    #
    lucene.buffer.size=16

    #
    # Set Lucene's merge factor. Higher numbers mean indexing goes faster but
    # uses more memory. The default value from Lucene is 10. This should never
    # be set to a number lower than 2.
    #
    lucene.merge.factor=10

    #
    # Input a class name that extends org.apache.lucene.index.MergePolicy.
    # Lucene uses this class to determine the sequence of primitive merge
    # operations. Note that the property "lucene.merge.factor" is not only used
    # by LogDocMergePolicy.
    #
    #lucene.merge.policy=org.apache.lucene.index.LogByteSizeMergePolicy
    lucene.merge.policy=org.apache.lucene.index.LogDocMergePolicy
    #lucene.merge.policy=org.apache.lucene.index.NoMergePolicy
    #lucene.merge.policy=org.apache.lucene.index.TieredMergePolicy
    #lucene.merge.policy=org.apache.lucene.index.UpgradeIndexMergePolicy

    #
    # Input a class name that extends org.apache.lucene.index.MergeScheduler.
    # Lucene uses this class to execute merges based on the policy set in the
    # property "lucene.merge.policy".
    #
    lucene.merge.scheduler=org.apache.lucene.index.ConcurrentMergeScheduler
    #lucene.merge.scheduler=org.apache.lucene.index.NoMergeScheduler
    #lucene.merge.scheduler=org.apache.lucene.index.SerialMergeScheduler

    #
    # Set this to true if you want the portal to replicate an index write across
    # all members of the cluster. This is useful in some clustered environments
    # where you wish each server instance to have its own copy of the Lucene
    # search index. This is only relevant when using the default Lucene indexing
    # engine.
    #
    lucene.replicate.write=false

    #
    # Specify the Lucene cluster index loading synchronization timeout in
    # milliseconds.
    #
    lucene.cluster.index.loading.sync.timeout=60000

    #
    # Set this to true when using canonical host name for retrieving
    # Lucene indexes from the cluster's master node. If set to false, it will
    # retrieve them using the node's IP address.
    #
    # For example, this can be useful, when using a subject alternative name
    # in self-signed certificates. If set to true, the canonical host name
    # will be used and must be the first entry in the /etc/hosts file for the
    # IP address used. For example:
    #
    #     208.164.186.1 test.com example.com
    #
    # "test."com will be used as the canonical host name and is assumed to be in
    # the certificate.
    #
    lucene.cluster.index.loading.use.canonical.host.name=false