/**
 * Copyright (c) 2000-2013 Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.liferay.portal.ext.model;

import aQute.bnd.annotation.ProviderType;

import com.liferay.portal.kernel.bean.AutoEscape;
import com.liferay.portal.kernel.exception.SystemException;
import com.liferay.portal.model.BaseModel;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.service.ServiceContext;

import com.liferay.portlet.expando.model.ExpandoBridge;

import java.io.Serializable;

import java.util.Date;

/**
 * The base model interface for the ServiceRemoteDef service. Represents a row in the &quot;ServiceRemoteDef&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This interface and its corresponding implementation {@link com.liferay.portal.ext.model.impl.ServiceRemoteDefModelImpl} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link com.liferay.portal.ext.model.impl.ServiceRemoteDefImpl}.
 * </p>
 *
 * @author Jeff Qian
 * @see ServiceRemoteDef
 * @see com.liferay.portal.ext.model.impl.ServiceRemoteDefImpl
 * @see com.liferay.portal.ext.model.impl.ServiceRemoteDefModelImpl
 * @generated
 */
@ProviderType
public interface ServiceRemoteDefModel extends BaseModel<ServiceRemoteDef> {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this interface directly. All methods that expect a service remote def model instance should use the {@link ServiceRemoteDef} interface instead.
	 */

	/**
	 * Returns the primary key of this service remote def.
	 *
	 * @return the primary key of this service remote def
	 */
	public long getPrimaryKey();

	/**
	 * Sets the primary key of this service remote def.
	 *
	 * @param primaryKey the primary key of this service remote def
	 */
	public void setPrimaryKey(long primaryKey);

	/**
	 * Returns the remote ID of this service remote def.
	 *
	 * @return the remote ID of this service remote def
	 */
	public long getRemoteId();

	/**
	 * Sets the remote ID of this service remote def.
	 *
	 * @param remoteId the remote ID of this service remote def
	 */
	public void setRemoteId(long remoteId);

	/**
	 * Returns the code of this service remote def.
	 *
	 * @return the code of this service remote def
	 */
	@AutoEscape
	public String getCode();

	/**
	 * Sets the code of this service remote def.
	 *
	 * @param code the code of this service remote def
	 */
	public void setCode(String code);

	/**
	 * Returns the user ID of this service remote def.
	 *
	 * @return the user ID of this service remote def
	 */
	public long getUserId();

	/**
	 * Sets the user ID of this service remote def.
	 *
	 * @param userId the user ID of this service remote def
	 */
	public void setUserId(long userId);

	/**
	 * Returns the user uuid of this service remote def.
	 *
	 * @return the user uuid of this service remote def
	 * @throws SystemException if a system exception occurred
	 */
	public String getUserUuid() throws SystemException;

	/**
	 * Sets the user uuid of this service remote def.
	 *
	 * @param userUuid the user uuid of this service remote def
	 */
	public void setUserUuid(String userUuid);

	/**
	 * Returns the user name of this service remote def.
	 *
	 * @return the user name of this service remote def
	 */
	@AutoEscape
	public String getUserName();

	/**
	 * Sets the user name of this service remote def.
	 *
	 * @param userName the user name of this service remote def
	 */
	public void setUserName(String userName);

	/**
	 * Returns the create date of this service remote def.
	 *
	 * @return the create date of this service remote def
	 */
	public Date getCreateDate();

	/**
	 * Sets the create date of this service remote def.
	 *
	 * @param createDate the create date of this service remote def
	 */
	public void setCreateDate(Date createDate);

	/**
	 * Returns the modified date of this service remote def.
	 *
	 * @return the modified date of this service remote def
	 */
	public Date getModifiedDate();

	/**
	 * Sets the modified date of this service remote def.
	 *
	 * @param modifiedDate the modified date of this service remote def
	 */
	public void setModifiedDate(Date modifiedDate);

	/**
	 * Returns the tag ID of this service remote def.
	 *
	 * @return the tag ID of this service remote def
	 */
	public long getTagId();

	/**
	 * Sets the tag ID of this service remote def.
	 *
	 * @param tagId the tag ID of this service remote def
	 */
	public void setTagId(long tagId);

	/**
	 * Returns the host of this service remote def.
	 *
	 * @return the host of this service remote def
	 */
	public long getHost();

	/**
	 * Sets the host of this service remote def.
	 *
	 * @param host the host of this service remote def
	 */
	public void setHost(long host);

	/**
	 * Returns the path of this service remote def.
	 *
	 * @return the path of this service remote def
	 */
	@AutoEscape
	public String getPath();

	/**
	 * Sets the path of this service remote def.
	 *
	 * @param path the path of this service remote def
	 */
	public void setPath(String path);

	/**
	 * Returns the http method of this service remote def.
	 *
	 * @return the http method of this service remote def
	 */
	@AutoEscape
	public String getHttpMethod();

	/**
	 * Sets the http method of this service remote def.
	 *
	 * @param httpMethod the http method of this service remote def
	 */
	public void setHttpMethod(String httpMethod);

	/**
	 * Returns the raw string of this service remote def.
	 *
	 * @return the raw string of this service remote def
	 */
	@AutoEscape
	public String getRawString();

	/**
	 * Sets the raw string of this service remote def.
	 *
	 * @param rawString the raw string of this service remote def
	 */
	public void setRawString(String rawString);

	/**
	 * Returns the description of this service remote def.
	 *
	 * @return the description of this service remote def
	 */
	@AutoEscape
	public String getDescription();

	/**
	 * Sets the description of this service remote def.
	 *
	 * @param description the description of this service remote def
	 */
	public void setDescription(String description);

	/**
	 * Returns the deprecated of this service remote def.
	 *
	 * @return the deprecated of this service remote def
	 */
	public boolean getDeprecated();

	/**
	 * Returns <code>true</code> if this service remote def is deprecated.
	 *
	 * @return <code>true</code> if this service remote def is deprecated; <code>false</code> otherwise
	 */
	public boolean isDeprecated();

	/**
	 * Sets whether this service remote def is deprecated.
	 *
	 * @param deprecated the deprecated of this service remote def
	 */
	public void setDeprecated(boolean deprecated);

	/**
	 * Returns the send with cookies of this service remote def.
	 *
	 * @return the send with cookies of this service remote def
	 */
	public boolean getSendWithCookies();

	/**
	 * Returns <code>true</code> if this service remote def is send with cookies.
	 *
	 * @return <code>true</code> if this service remote def is send with cookies; <code>false</code> otherwise
	 */
	public boolean isSendWithCookies();

	/**
	 * Sets whether this service remote def is send with cookies.
	 *
	 * @param sendWithCookies the send with cookies of this service remote def
	 */
	public void setSendWithCookies(boolean sendWithCookies);

	/**
	 * Returns the cookie domain of this service remote def.
	 *
	 * @return the cookie domain of this service remote def
	 */
	@AutoEscape
	public String getCookieDomain();

	/**
	 * Sets the cookie domain of this service remote def.
	 *
	 * @param cookieDomain the cookie domain of this service remote def
	 */
	public void setCookieDomain(String cookieDomain);

	/**
	 * Returns the cookie path of this service remote def.
	 *
	 * @return the cookie path of this service remote def
	 */
	@AutoEscape
	public String getCookiePath();

	/**
	 * Sets the cookie path of this service remote def.
	 *
	 * @param cookiePath the cookie path of this service remote def
	 */
	public void setCookiePath(String cookiePath);

	/**
	 * Returns the script parameter of this service remote def.
	 *
	 * @return the script parameter of this service remote def
	 */
	@AutoEscape
	public String getScriptParameter();

	/**
	 * Sets the script parameter of this service remote def.
	 *
	 * @param scriptParameter the script parameter of this service remote def
	 */
	public void setScriptParameter(String scriptParameter);

	/**
	 * Returns the script header of this service remote def.
	 *
	 * @return the script header of this service remote def
	 */
	@AutoEscape
	public String getScriptHeader();

	/**
	 * Sets the script header of this service remote def.
	 *
	 * @param scriptHeader the script header of this service remote def
	 */
	public void setScriptHeader(String scriptHeader);

	/**
	 * Returns the script response of this service remote def.
	 *
	 * @return the script response of this service remote def
	 */
	@AutoEscape
	public String getScriptResponse();

	/**
	 * Sets the script response of this service remote def.
	 *
	 * @param scriptResponse the script response of this service remote def
	 */
	public void setScriptResponse(String scriptResponse);

	/**
	 * Returns the cache live time of this service remote def.
	 *
	 * @return the cache live time of this service remote def
	 */
	public int getCacheLiveTime();

	/**
	 * Sets the cache live time of this service remote def.
	 *
	 * @param cacheLiveTime the cache live time of this service remote def
	 */
	public void setCacheLiveTime(int cacheLiveTime);

	/**
	 * Returns the auth ID of this service remote def.
	 *
	 * @return the auth ID of this service remote def
	 */
	public long getAuthId();

	/**
	 * Sets the auth ID of this service remote def.
	 *
	 * @param authId the auth ID of this service remote def
	 */
	public void setAuthId(long authId);

	@Override
	public boolean isNew();

	@Override
	public void setNew(boolean n);

	@Override
	public boolean isCachedModel();

	@Override
	public void setCachedModel(boolean cachedModel);

	@Override
	public boolean isEscapedModel();

	@Override
	public Serializable getPrimaryKeyObj();

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj);

	@Override
	public ExpandoBridge getExpandoBridge();

	@Override
	public void setExpandoBridgeAttributes(BaseModel<?> baseModel);

	@Override
	public void setExpandoBridgeAttributes(ExpandoBridge expandoBridge);

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext);

	@Override
	public Object clone();

	@Override
	public int compareTo(
		com.liferay.portal.ext.model.ServiceRemoteDef serviceRemoteDef);

	@Override
	public int hashCode();

	@Override
	public CacheModel<com.liferay.portal.ext.model.ServiceRemoteDef> toCacheModel();

	@Override
	public com.liferay.portal.ext.model.ServiceRemoteDef toEscapedModel();

	@Override
	public com.liferay.portal.ext.model.ServiceRemoteDef toUnescapedModel();

	@Override
	public String toString();

	@Override
	public String toXmlString();
}