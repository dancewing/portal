/**
 * Copyright (c) 2000-2013 Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.liferay.portal.ext.model;

import aQute.bnd.annotation.ProviderType;

import com.liferay.portal.kernel.bean.AutoEscape;
import com.liferay.portal.kernel.exception.SystemException;
import com.liferay.portal.model.AttachedModel;
import com.liferay.portal.model.BaseModel;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.service.ServiceContext;

import com.liferay.portlet.expando.model.ExpandoBridge;

import java.io.Serializable;

import java.util.Date;

/**
 * The base model interface for the ServiceAuthorization service. Represents a row in the &quot;ServiceAuthorization&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This interface and its corresponding implementation {@link com.liferay.portal.ext.model.impl.ServiceAuthorizationModelImpl} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link com.liferay.portal.ext.model.impl.ServiceAuthorizationImpl}.
 * </p>
 *
 * @author Jeff Qian
 * @see ServiceAuthorization
 * @see com.liferay.portal.ext.model.impl.ServiceAuthorizationImpl
 * @see com.liferay.portal.ext.model.impl.ServiceAuthorizationModelImpl
 * @generated
 */
@ProviderType
public interface ServiceAuthorizationModel extends AttachedModel,
	BaseModel<ServiceAuthorization> {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this interface directly. All methods that expect a service authorization model instance should use the {@link ServiceAuthorization} interface instead.
	 */

	/**
	 * Returns the primary key of this service authorization.
	 *
	 * @return the primary key of this service authorization
	 */
	public long getPrimaryKey();

	/**
	 * Sets the primary key of this service authorization.
	 *
	 * @param primaryKey the primary key of this service authorization
	 */
	public void setPrimaryKey(long primaryKey);

	/**
	 * Returns the auth ID of this service authorization.
	 *
	 * @return the auth ID of this service authorization
	 */
	public long getAuthId();

	/**
	 * Sets the auth ID of this service authorization.
	 *
	 * @param authId the auth ID of this service authorization
	 */
	public void setAuthId(long authId);

	/**
	 * Returns the code of this service authorization.
	 *
	 * @return the code of this service authorization
	 */
	@AutoEscape
	public String getCode();

	/**
	 * Sets the code of this service authorization.
	 *
	 * @param code the code of this service authorization
	 */
	public void setCode(String code);

	/**
	 * Returns the user ID of this service authorization.
	 *
	 * @return the user ID of this service authorization
	 */
	public long getUserId();

	/**
	 * Sets the user ID of this service authorization.
	 *
	 * @param userId the user ID of this service authorization
	 */
	public void setUserId(long userId);

	/**
	 * Returns the user uuid of this service authorization.
	 *
	 * @return the user uuid of this service authorization
	 * @throws SystemException if a system exception occurred
	 */
	public String getUserUuid() throws SystemException;

	/**
	 * Sets the user uuid of this service authorization.
	 *
	 * @param userUuid the user uuid of this service authorization
	 */
	public void setUserUuid(String userUuid);

	/**
	 * Returns the user name of this service authorization.
	 *
	 * @return the user name of this service authorization
	 */
	@AutoEscape
	public String getUserName();

	/**
	 * Sets the user name of this service authorization.
	 *
	 * @param userName the user name of this service authorization
	 */
	public void setUserName(String userName);

	/**
	 * Returns the create date of this service authorization.
	 *
	 * @return the create date of this service authorization
	 */
	public Date getCreateDate();

	/**
	 * Sets the create date of this service authorization.
	 *
	 * @param createDate the create date of this service authorization
	 */
	public void setCreateDate(Date createDate);

	/**
	 * Returns the modified date of this service authorization.
	 *
	 * @return the modified date of this service authorization
	 */
	public Date getModifiedDate();

	/**
	 * Sets the modified date of this service authorization.
	 *
	 * @param modifiedDate the modified date of this service authorization
	 */
	public void setModifiedDate(Date modifiedDate);

	/**
	 * Returns the fully qualified class name of this service authorization.
	 *
	 * @return the fully qualified class name of this service authorization
	 */
	@Override
	public String getClassName();

	public void setClassName(String className);

	/**
	 * Returns the class name ID of this service authorization.
	 *
	 * @return the class name ID of this service authorization
	 */
	@Override
	public long getClassNameId();

	/**
	 * Sets the class name ID of this service authorization.
	 *
	 * @param classNameId the class name ID of this service authorization
	 */
	@Override
	public void setClassNameId(long classNameId);

	/**
	 * Returns the class p k of this service authorization.
	 *
	 * @return the class p k of this service authorization
	 */
	@Override
	public long getClassPK();

	/**
	 * Sets the class p k of this service authorization.
	 *
	 * @param classPK the class p k of this service authorization
	 */
	@Override
	public void setClassPK(long classPK);

	/**
	 * Returns the type of this service authorization.
	 *
	 * @return the type of this service authorization
	 */
	@AutoEscape
	public String getType();

	/**
	 * Sets the type of this service authorization.
	 *
	 * @param type the type of this service authorization
	 */
	public void setType(String type);

	/**
	 * Returns the template of this service authorization.
	 *
	 * @return the template of this service authorization
	 */
	@AutoEscape
	public String getTemplate();

	/**
	 * Sets the template of this service authorization.
	 *
	 * @param template the template of this service authorization
	 */
	public void setTemplate(String template);

	@Override
	public boolean isNew();

	@Override
	public void setNew(boolean n);

	@Override
	public boolean isCachedModel();

	@Override
	public void setCachedModel(boolean cachedModel);

	@Override
	public boolean isEscapedModel();

	@Override
	public Serializable getPrimaryKeyObj();

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj);

	@Override
	public ExpandoBridge getExpandoBridge();

	@Override
	public void setExpandoBridgeAttributes(BaseModel<?> baseModel);

	@Override
	public void setExpandoBridgeAttributes(ExpandoBridge expandoBridge);

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext);

	@Override
	public Object clone();

	@Override
	public int compareTo(
		com.liferay.portal.ext.model.ServiceAuthorization serviceAuthorization);

	@Override
	public int hashCode();

	@Override
	public CacheModel<com.liferay.portal.ext.model.ServiceAuthorization> toCacheModel();

	@Override
	public com.liferay.portal.ext.model.ServiceAuthorization toEscapedModel();

	@Override
	public com.liferay.portal.ext.model.ServiceAuthorization toUnescapedModel();

	@Override
	public String toString();

	@Override
	public String toXmlString();
}