/**
 * Copyright (c) 2000-2013 Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.liferay.portal.ext.model.impl;

import com.liferay.portal.ext.model.ServicePublishDef;
import com.liferay.portal.ext.model.ServicePublishDefModel;
import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.exception.SystemException;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;
import com.liferay.portal.service.ServiceContext;
import com.liferay.portal.util.PortalUtil;

import com.liferay.portlet.expando.model.ExpandoBridge;
import com.liferay.portlet.expando.util.ExpandoBridgeFactoryUtil;

import java.io.Serializable;

import java.sql.Types;

import java.util.Date;
import java.util.HashMap;
import java.util.Map;

/**
 * The base model implementation for the ServicePublishDef service. Represents a row in the &quot;ServicePublishDef&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link com.liferay.portal.ext.model.ServicePublishDefModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link ServicePublishDefImpl}.
 * </p>
 *
 * @author Jeff Qian
 * @see ServicePublishDefImpl
 * @see com.liferay.portal.ext.model.ServicePublishDef
 * @see com.liferay.portal.ext.model.ServicePublishDefModel
 * @generated
 */
public class ServicePublishDefModelImpl extends BaseModelImpl<ServicePublishDef>
	implements ServicePublishDefModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a service publish def model instance should use the {@link com.liferay.portal.ext.model.ServicePublishDef} interface instead.
	 */
	public static final String TABLE_NAME = "ServicePublishDef";
	public static final Object[][] TABLE_COLUMNS = {
			{ "publishId", Types.BIGINT },
			{ "path_", Types.VARCHAR },
			{ "userId", Types.BIGINT },
			{ "userName", Types.VARCHAR },
			{ "createDate", Types.TIMESTAMP },
			{ "modifiedDate", Types.TIMESTAMP },
			{ "tagId", Types.BIGINT },
			{ "httpMethod", Types.VARCHAR },
			{ "scriptResponse", Types.CLOB },
			{ "siteAwareness", Types.BOOLEAN },
			{ "supportAnonymous", Types.BOOLEAN },
			{ "description", Types.VARCHAR },
			{ "deprecated", Types.BOOLEAN },
			{ "cacheLiveTime", Types.INTEGER }
		};
	public static final String TABLE_SQL_CREATE = "create table ServicePublishDef (publishId LONG not null primary key,path_ VARCHAR(75) null,userId LONG,userName VARCHAR(75) null,createDate DATE null,modifiedDate DATE null,tagId LONG,httpMethod VARCHAR(75) null,scriptResponse TEXT null,siteAwareness BOOLEAN,supportAnonymous BOOLEAN,description VARCHAR(75) null,deprecated BOOLEAN,cacheLiveTime INTEGER)";
	public static final String TABLE_SQL_DROP = "drop table ServicePublishDef";
	public static final String ORDER_BY_JPQL = " ORDER BY servicePublishDef.publishId ASC";
	public static final String ORDER_BY_SQL = " ORDER BY ServicePublishDef.publishId ASC";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.portal.util.PropsUtil.get(
				"value.object.entity.cache.enabled.com.liferay.portal.ext.model.ServicePublishDef"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.portal.util.PropsUtil.get(
				"value.object.finder.cache.enabled.com.liferay.portal.ext.model.ServicePublishDef"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(com.liferay.portal.util.PropsUtil.get(
				"value.object.column.bitmask.enabled.com.liferay.portal.ext.model.ServicePublishDef"),
			true);
	public static long PATH_COLUMN_BITMASK = 1L;
	public static long TAGID_COLUMN_BITMASK = 2L;
	public static long PUBLISHID_COLUMN_BITMASK = 4L;
	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.portal.util.PropsUtil.get(
				"lock.expiration.time.com.liferay.portal.ext.model.ServicePublishDef"));

	public ServicePublishDefModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _publishId;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setPublishId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _publishId;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return ServicePublishDef.class;
	}

	@Override
	public String getModelClassName() {
		return ServicePublishDef.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("publishId", getPublishId());
		attributes.put("path", getPath());
		attributes.put("userId", getUserId());
		attributes.put("userName", getUserName());
		attributes.put("createDate", getCreateDate());
		attributes.put("modifiedDate", getModifiedDate());
		attributes.put("tagId", getTagId());
		attributes.put("httpMethod", getHttpMethod());
		attributes.put("scriptResponse", getScriptResponse());
		attributes.put("siteAwareness", getSiteAwareness());
		attributes.put("supportAnonymous", getSupportAnonymous());
		attributes.put("description", getDescription());
		attributes.put("deprecated", getDeprecated());
		attributes.put("cacheLiveTime", getCacheLiveTime());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Long publishId = (Long)attributes.get("publishId");

		if (publishId != null) {
			setPublishId(publishId);
		}

		String path = (String)attributes.get("path");

		if (path != null) {
			setPath(path);
		}

		Long userId = (Long)attributes.get("userId");

		if (userId != null) {
			setUserId(userId);
		}

		String userName = (String)attributes.get("userName");

		if (userName != null) {
			setUserName(userName);
		}

		Date createDate = (Date)attributes.get("createDate");

		if (createDate != null) {
			setCreateDate(createDate);
		}

		Date modifiedDate = (Date)attributes.get("modifiedDate");

		if (modifiedDate != null) {
			setModifiedDate(modifiedDate);
		}

		Long tagId = (Long)attributes.get("tagId");

		if (tagId != null) {
			setTagId(tagId);
		}

		String httpMethod = (String)attributes.get("httpMethod");

		if (httpMethod != null) {
			setHttpMethod(httpMethod);
		}

		String scriptResponse = (String)attributes.get("scriptResponse");

		if (scriptResponse != null) {
			setScriptResponse(scriptResponse);
		}

		Boolean siteAwareness = (Boolean)attributes.get("siteAwareness");

		if (siteAwareness != null) {
			setSiteAwareness(siteAwareness);
		}

		Boolean supportAnonymous = (Boolean)attributes.get("supportAnonymous");

		if (supportAnonymous != null) {
			setSupportAnonymous(supportAnonymous);
		}

		String description = (String)attributes.get("description");

		if (description != null) {
			setDescription(description);
		}

		Boolean deprecated = (Boolean)attributes.get("deprecated");

		if (deprecated != null) {
			setDeprecated(deprecated);
		}

		Integer cacheLiveTime = (Integer)attributes.get("cacheLiveTime");

		if (cacheLiveTime != null) {
			setCacheLiveTime(cacheLiveTime);
		}
	}

	@Override
	public long getPublishId() {
		return _publishId;
	}

	@Override
	public void setPublishId(long publishId) {
		_publishId = publishId;
	}

	@Override
	public String getPath() {
		if (_path == null) {
			return StringPool.BLANK;
		}
		else {
			return _path;
		}
	}

	@Override
	public void setPath(String path) {
		_columnBitmask |= PATH_COLUMN_BITMASK;

		if (_originalPath == null) {
			_originalPath = _path;
		}

		_path = path;
	}

	public String getOriginalPath() {
		return GetterUtil.getString(_originalPath);
	}

	@Override
	public long getUserId() {
		return _userId;
	}

	@Override
	public void setUserId(long userId) {
		_userId = userId;
	}

	@Override
	public String getUserUuid() throws SystemException {
		return PortalUtil.getUserValue(getUserId(), "uuid", _userUuid);
	}

	@Override
	public void setUserUuid(String userUuid) {
		_userUuid = userUuid;
	}

	@Override
	public String getUserName() {
		if (_userName == null) {
			return StringPool.BLANK;
		}
		else {
			return _userName;
		}
	}

	@Override
	public void setUserName(String userName) {
		_userName = userName;
	}

	@Override
	public Date getCreateDate() {
		return _createDate;
	}

	@Override
	public void setCreateDate(Date createDate) {
		_createDate = createDate;
	}

	@Override
	public Date getModifiedDate() {
		return _modifiedDate;
	}

	@Override
	public void setModifiedDate(Date modifiedDate) {
		_modifiedDate = modifiedDate;
	}

	@Override
	public long getTagId() {
		return _tagId;
	}

	@Override
	public void setTagId(long tagId) {
		_columnBitmask |= TAGID_COLUMN_BITMASK;

		if (!_setOriginalTagId) {
			_setOriginalTagId = true;

			_originalTagId = _tagId;
		}

		_tagId = tagId;
	}

	public long getOriginalTagId() {
		return _originalTagId;
	}

	@Override
	public String getHttpMethod() {
		if (_httpMethod == null) {
			return StringPool.BLANK;
		}
		else {
			return _httpMethod;
		}
	}

	@Override
	public void setHttpMethod(String httpMethod) {
		_httpMethod = httpMethod;
	}

	@Override
	public String getScriptResponse() {
		if (_scriptResponse == null) {
			return StringPool.BLANK;
		}
		else {
			return _scriptResponse;
		}
	}

	@Override
	public void setScriptResponse(String scriptResponse) {
		_scriptResponse = scriptResponse;
	}

	@Override
	public boolean getSiteAwareness() {
		return _siteAwareness;
	}

	@Override
	public boolean isSiteAwareness() {
		return _siteAwareness;
	}

	@Override
	public void setSiteAwareness(boolean siteAwareness) {
		_siteAwareness = siteAwareness;
	}

	@Override
	public boolean getSupportAnonymous() {
		return _supportAnonymous;
	}

	@Override
	public boolean isSupportAnonymous() {
		return _supportAnonymous;
	}

	@Override
	public void setSupportAnonymous(boolean supportAnonymous) {
		_supportAnonymous = supportAnonymous;
	}

	@Override
	public String getDescription() {
		if (_description == null) {
			return StringPool.BLANK;
		}
		else {
			return _description;
		}
	}

	@Override
	public void setDescription(String description) {
		_description = description;
	}

	@Override
	public boolean getDeprecated() {
		return _deprecated;
	}

	@Override
	public boolean isDeprecated() {
		return _deprecated;
	}

	@Override
	public void setDeprecated(boolean deprecated) {
		_deprecated = deprecated;
	}

	@Override
	public int getCacheLiveTime() {
		return _cacheLiveTime;
	}

	@Override
	public void setCacheLiveTime(int cacheLiveTime) {
		_cacheLiveTime = cacheLiveTime;
	}

	public long getColumnBitmask() {
		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(0,
			ServicePublishDef.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public ServicePublishDef toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (ServicePublishDef)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		ServicePublishDefImpl servicePublishDefImpl = new ServicePublishDefImpl();

		servicePublishDefImpl.setPublishId(getPublishId());
		servicePublishDefImpl.setPath(getPath());
		servicePublishDefImpl.setUserId(getUserId());
		servicePublishDefImpl.setUserName(getUserName());
		servicePublishDefImpl.setCreateDate(getCreateDate());
		servicePublishDefImpl.setModifiedDate(getModifiedDate());
		servicePublishDefImpl.setTagId(getTagId());
		servicePublishDefImpl.setHttpMethod(getHttpMethod());
		servicePublishDefImpl.setScriptResponse(getScriptResponse());
		servicePublishDefImpl.setSiteAwareness(getSiteAwareness());
		servicePublishDefImpl.setSupportAnonymous(getSupportAnonymous());
		servicePublishDefImpl.setDescription(getDescription());
		servicePublishDefImpl.setDeprecated(getDeprecated());
		servicePublishDefImpl.setCacheLiveTime(getCacheLiveTime());

		servicePublishDefImpl.resetOriginalValues();

		return servicePublishDefImpl;
	}

	@Override
	public int compareTo(ServicePublishDef servicePublishDef) {
		long primaryKey = servicePublishDef.getPrimaryKey();

		if (getPrimaryKey() < primaryKey) {
			return -1;
		}
		else if (getPrimaryKey() > primaryKey) {
			return 1;
		}
		else {
			return 0;
		}
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof ServicePublishDef)) {
			return false;
		}

		ServicePublishDef servicePublishDef = (ServicePublishDef)obj;

		long primaryKey = servicePublishDef.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public void resetOriginalValues() {
		ServicePublishDefModelImpl servicePublishDefModelImpl = this;

		servicePublishDefModelImpl._originalPath = servicePublishDefModelImpl._path;

		servicePublishDefModelImpl._originalTagId = servicePublishDefModelImpl._tagId;

		servicePublishDefModelImpl._setOriginalTagId = false;

		servicePublishDefModelImpl._columnBitmask = 0;
	}

	@Override
	public CacheModel<ServicePublishDef> toCacheModel() {
		ServicePublishDefCacheModel servicePublishDefCacheModel = new ServicePublishDefCacheModel();

		servicePublishDefCacheModel.publishId = getPublishId();

		servicePublishDefCacheModel.path = getPath();

		String path = servicePublishDefCacheModel.path;

		if ((path != null) && (path.length() == 0)) {
			servicePublishDefCacheModel.path = null;
		}

		servicePublishDefCacheModel.userId = getUserId();

		servicePublishDefCacheModel.userName = getUserName();

		String userName = servicePublishDefCacheModel.userName;

		if ((userName != null) && (userName.length() == 0)) {
			servicePublishDefCacheModel.userName = null;
		}

		Date createDate = getCreateDate();

		if (createDate != null) {
			servicePublishDefCacheModel.createDate = createDate.getTime();
		}
		else {
			servicePublishDefCacheModel.createDate = Long.MIN_VALUE;
		}

		Date modifiedDate = getModifiedDate();

		if (modifiedDate != null) {
			servicePublishDefCacheModel.modifiedDate = modifiedDate.getTime();
		}
		else {
			servicePublishDefCacheModel.modifiedDate = Long.MIN_VALUE;
		}

		servicePublishDefCacheModel.tagId = getTagId();

		servicePublishDefCacheModel.httpMethod = getHttpMethod();

		String httpMethod = servicePublishDefCacheModel.httpMethod;

		if ((httpMethod != null) && (httpMethod.length() == 0)) {
			servicePublishDefCacheModel.httpMethod = null;
		}

		servicePublishDefCacheModel.scriptResponse = getScriptResponse();

		String scriptResponse = servicePublishDefCacheModel.scriptResponse;

		if ((scriptResponse != null) && (scriptResponse.length() == 0)) {
			servicePublishDefCacheModel.scriptResponse = null;
		}

		servicePublishDefCacheModel.siteAwareness = getSiteAwareness();

		servicePublishDefCacheModel.supportAnonymous = getSupportAnonymous();

		servicePublishDefCacheModel.description = getDescription();

		String description = servicePublishDefCacheModel.description;

		if ((description != null) && (description.length() == 0)) {
			servicePublishDefCacheModel.description = null;
		}

		servicePublishDefCacheModel.deprecated = getDeprecated();

		servicePublishDefCacheModel.cacheLiveTime = getCacheLiveTime();

		return servicePublishDefCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(29);

		sb.append("{publishId=");
		sb.append(getPublishId());
		sb.append(", path=");
		sb.append(getPath());
		sb.append(", userId=");
		sb.append(getUserId());
		sb.append(", userName=");
		sb.append(getUserName());
		sb.append(", createDate=");
		sb.append(getCreateDate());
		sb.append(", modifiedDate=");
		sb.append(getModifiedDate());
		sb.append(", tagId=");
		sb.append(getTagId());
		sb.append(", httpMethod=");
		sb.append(getHttpMethod());
		sb.append(", scriptResponse=");
		sb.append(getScriptResponse());
		sb.append(", siteAwareness=");
		sb.append(getSiteAwareness());
		sb.append(", supportAnonymous=");
		sb.append(getSupportAnonymous());
		sb.append(", description=");
		sb.append(getDescription());
		sb.append(", deprecated=");
		sb.append(getDeprecated());
		sb.append(", cacheLiveTime=");
		sb.append(getCacheLiveTime());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(46);

		sb.append("<model><model-name>");
		sb.append("com.liferay.portal.ext.model.ServicePublishDef");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>publishId</column-name><column-value><![CDATA[");
		sb.append(getPublishId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>path</column-name><column-value><![CDATA[");
		sb.append(getPath());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>userId</column-name><column-value><![CDATA[");
		sb.append(getUserId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>userName</column-name><column-value><![CDATA[");
		sb.append(getUserName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>createDate</column-name><column-value><![CDATA[");
		sb.append(getCreateDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>modifiedDate</column-name><column-value><![CDATA[");
		sb.append(getModifiedDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>tagId</column-name><column-value><![CDATA[");
		sb.append(getTagId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>httpMethod</column-name><column-value><![CDATA[");
		sb.append(getHttpMethod());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>scriptResponse</column-name><column-value><![CDATA[");
		sb.append(getScriptResponse());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>siteAwareness</column-name><column-value><![CDATA[");
		sb.append(getSiteAwareness());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>supportAnonymous</column-name><column-value><![CDATA[");
		sb.append(getSupportAnonymous());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>description</column-name><column-value><![CDATA[");
		sb.append(getDescription());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>deprecated</column-name><column-value><![CDATA[");
		sb.append(getDeprecated());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>cacheLiveTime</column-name><column-value><![CDATA[");
		sb.append(getCacheLiveTime());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static ClassLoader _classLoader = ServicePublishDef.class.getClassLoader();
	private static Class<?>[] _escapedModelInterfaces = new Class[] {
			ServicePublishDef.class
		};
	private long _publishId;
	private String _path;
	private String _originalPath;
	private long _userId;
	private String _userUuid;
	private String _userName;
	private Date _createDate;
	private Date _modifiedDate;
	private long _tagId;
	private long _originalTagId;
	private boolean _setOriginalTagId;
	private String _httpMethod;
	private String _scriptResponse;
	private boolean _siteAwareness;
	private boolean _supportAnonymous;
	private String _description;
	private boolean _deprecated;
	private int _cacheLiveTime;
	private long _columnBitmask;
	private ServicePublishDef _escapedModel;
}