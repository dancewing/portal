/**
 * Copyright (c) 2000-2013 Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.liferay.portal.ext.service.base;

import com.liferay.portal.ext.model.ServiceAuthorization;
import com.liferay.portal.ext.service.ServiceAuthorizationLocalService;
import com.liferay.portal.ext.service.persistence.FilterGroupPersistence;
import com.liferay.portal.ext.service.persistence.FilterScopePersistence;
import com.liferay.portal.ext.service.persistence.ModelConnectionEntryPersistence;
import com.liferay.portal.ext.service.persistence.ModelConnectionLinePersistence;
import com.liferay.portal.ext.service.persistence.ServiceAuthorizationPersistence;
import com.liferay.portal.ext.service.persistence.ServiceHistoryPersistence;
import com.liferay.portal.ext.service.persistence.ServiceHostPersistence;
import com.liferay.portal.ext.service.persistence.ServiceParamPersistence;
import com.liferay.portal.ext.service.persistence.ServicePublishDefPersistence;
import com.liferay.portal.ext.service.persistence.ServiceRemoteDefPersistence;
import com.liferay.portal.ext.service.persistence.ServiceTagPersistence;
import com.liferay.portal.kernel.bean.BeanReference;
import com.liferay.portal.kernel.bean.IdentifiableBean;
import com.liferay.portal.kernel.dao.jdbc.SqlUpdate;
import com.liferay.portal.kernel.dao.jdbc.SqlUpdateFactoryUtil;
import com.liferay.portal.kernel.dao.orm.DynamicQuery;
import com.liferay.portal.kernel.dao.orm.DynamicQueryFactoryUtil;
import com.liferay.portal.kernel.dao.orm.Projection;
import com.liferay.portal.kernel.exception.PortalException;
import com.liferay.portal.kernel.exception.SystemException;
import com.liferay.portal.kernel.search.Indexable;
import com.liferay.portal.kernel.search.IndexableType;
import com.liferay.portal.kernel.util.OrderByComparator;
import com.liferay.portal.model.PersistedModel;
import com.liferay.portal.service.BaseLocalServiceImpl;
import com.liferay.portal.service.PersistedModelLocalServiceRegistry;
import com.liferay.portal.service.persistence.UserFinder;
import com.liferay.portal.service.persistence.UserPersistence;

import java.io.Serializable;

import java.util.List;

import javax.sql.DataSource;

/**
 * Provides the base implementation for the service authorization local service.
 *
 * <p>
 * This implementation exists only as a container for the default service methods generated by ServiceBuilder. All custom service methods should be put in {@link com.liferay.portal.ext.service.impl.ServiceAuthorizationLocalServiceImpl}.
 * </p>
 *
 * @author Jeff Qian
 * @see com.liferay.portal.ext.service.impl.ServiceAuthorizationLocalServiceImpl
 * @see com.liferay.portal.ext.service.ServiceAuthorizationLocalServiceUtil
 * @generated
 */
public abstract class ServiceAuthorizationLocalServiceBaseImpl
	extends BaseLocalServiceImpl implements ServiceAuthorizationLocalService,
		IdentifiableBean {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. Always use {@link com.liferay.portal.ext.service.ServiceAuthorizationLocalServiceUtil} to access the service authorization local service.
	 */

	/**
	 * Adds the service authorization to the database. Also notifies the appropriate model listeners.
	 *
	 * @param serviceAuthorization the service authorization
	 * @return the service authorization that was added
	 * @throws SystemException if a system exception occurred
	 */
	@Indexable(type = IndexableType.REINDEX)
	@Override
	public ServiceAuthorization addServiceAuthorization(
		ServiceAuthorization serviceAuthorization) throws SystemException {
		serviceAuthorization.setNew(true);

		return serviceAuthorizationPersistence.update(serviceAuthorization);
	}

	/**
	 * Creates a new service authorization with the primary key. Does not add the service authorization to the database.
	 *
	 * @param authId the primary key for the new service authorization
	 * @return the new service authorization
	 */
	@Override
	public ServiceAuthorization createServiceAuthorization(long authId) {
		return serviceAuthorizationPersistence.create(authId);
	}

	/**
	 * Deletes the service authorization with the primary key from the database. Also notifies the appropriate model listeners.
	 *
	 * @param authId the primary key of the service authorization
	 * @return the service authorization that was removed
	 * @throws PortalException if a service authorization with the primary key could not be found
	 * @throws SystemException if a system exception occurred
	 */
	@Indexable(type = IndexableType.DELETE)
	@Override
	public ServiceAuthorization deleteServiceAuthorization(long authId)
		throws PortalException, SystemException {
		return serviceAuthorizationPersistence.remove(authId);
	}

	/**
	 * Deletes the service authorization from the database. Also notifies the appropriate model listeners.
	 *
	 * @param serviceAuthorization the service authorization
	 * @return the service authorization that was removed
	 * @throws SystemException if a system exception occurred
	 */
	@Indexable(type = IndexableType.DELETE)
	@Override
	public ServiceAuthorization deleteServiceAuthorization(
		ServiceAuthorization serviceAuthorization) throws SystemException {
		return serviceAuthorizationPersistence.remove(serviceAuthorization);
	}

	@Override
	public DynamicQuery dynamicQuery() {
		Class<?> clazz = getClass();

		return DynamicQueryFactoryUtil.forClass(ServiceAuthorization.class,
			clazz.getClassLoader());
	}

	/**
	 * Performs a dynamic query on the database and returns the matching rows.
	 *
	 * @param dynamicQuery the dynamic query
	 * @return the matching rows
	 * @throws SystemException if a system exception occurred
	 */
	@Override
	@SuppressWarnings("rawtypes")
	public List dynamicQuery(DynamicQuery dynamicQuery)
		throws SystemException {
		return serviceAuthorizationPersistence.findWithDynamicQuery(dynamicQuery);
	}

	/**
	 * Performs a dynamic query on the database and returns a range of the matching rows.
	 *
	 * <p>
	 * Useful when paginating results. Returns a maximum of <code>end - start</code> instances. <code>start</code> and <code>end</code> are not primary keys, they are indexes in the result set. Thus, <code>0</code> refers to the first result in the set. Setting both <code>start</code> and <code>end</code> to {@link com.liferay.portal.kernel.dao.orm.QueryUtil#ALL_POS} will return the full result set. If <code>orderByComparator</code> is specified, then the query will include the given ORDER BY logic. If <code>orderByComparator</code> is absent and pagination is required (<code>start</code> and <code>end</code> are not {@link com.liferay.portal.kernel.dao.orm.QueryUtil#ALL_POS}), then the query will include the default ORDER BY logic from {@link com.liferay.portal.ext.model.impl.ServiceAuthorizationModelImpl}. If both <code>orderByComparator</code> and pagination are absent, for performance reasons, the query will not have an ORDER BY clause and the returned result set will be sorted on by the primary key in an ascending order.
	 * </p>
	 *
	 * @param dynamicQuery the dynamic query
	 * @param start the lower bound of the range of model instances
	 * @param end the upper bound of the range of model instances (not inclusive)
	 * @return the range of matching rows
	 * @throws SystemException if a system exception occurred
	 */
	@Override
	@SuppressWarnings("rawtypes")
	public List dynamicQuery(DynamicQuery dynamicQuery, int start, int end)
		throws SystemException {
		return serviceAuthorizationPersistence.findWithDynamicQuery(dynamicQuery,
			start, end);
	}

	/**
	 * Performs a dynamic query on the database and returns an ordered range of the matching rows.
	 *
	 * <p>
	 * Useful when paginating results. Returns a maximum of <code>end - start</code> instances. <code>start</code> and <code>end</code> are not primary keys, they are indexes in the result set. Thus, <code>0</code> refers to the first result in the set. Setting both <code>start</code> and <code>end</code> to {@link com.liferay.portal.kernel.dao.orm.QueryUtil#ALL_POS} will return the full result set. If <code>orderByComparator</code> is specified, then the query will include the given ORDER BY logic. If <code>orderByComparator</code> is absent and pagination is required (<code>start</code> and <code>end</code> are not {@link com.liferay.portal.kernel.dao.orm.QueryUtil#ALL_POS}), then the query will include the default ORDER BY logic from {@link com.liferay.portal.ext.model.impl.ServiceAuthorizationModelImpl}. If both <code>orderByComparator</code> and pagination are absent, for performance reasons, the query will not have an ORDER BY clause and the returned result set will be sorted on by the primary key in an ascending order.
	 * </p>
	 *
	 * @param dynamicQuery the dynamic query
	 * @param start the lower bound of the range of model instances
	 * @param end the upper bound of the range of model instances (not inclusive)
	 * @param orderByComparator the comparator to order the results by (optionally <code>null</code>)
	 * @return the ordered range of matching rows
	 * @throws SystemException if a system exception occurred
	 */
	@Override
	@SuppressWarnings("rawtypes")
	public List dynamicQuery(DynamicQuery dynamicQuery, int start, int end,
		OrderByComparator orderByComparator) throws SystemException {
		return serviceAuthorizationPersistence.findWithDynamicQuery(dynamicQuery,
			start, end, orderByComparator);
	}

	/**
	 * Returns the number of rows that match the dynamic query.
	 *
	 * @param dynamicQuery the dynamic query
	 * @return the number of rows that match the dynamic query
	 * @throws SystemException if a system exception occurred
	 */
	@Override
	public long dynamicQueryCount(DynamicQuery dynamicQuery)
		throws SystemException {
		return serviceAuthorizationPersistence.countWithDynamicQuery(dynamicQuery);
	}

	/**
	 * Returns the number of rows that match the dynamic query.
	 *
	 * @param dynamicQuery the dynamic query
	 * @param projection the projection to apply to the query
	 * @return the number of rows that match the dynamic query
	 * @throws SystemException if a system exception occurred
	 */
	@Override
	public long dynamicQueryCount(DynamicQuery dynamicQuery,
		Projection projection) throws SystemException {
		return serviceAuthorizationPersistence.countWithDynamicQuery(dynamicQuery,
			projection);
	}

	@Override
	public ServiceAuthorization fetchServiceAuthorization(long authId)
		throws SystemException {
		return serviceAuthorizationPersistence.fetchByPrimaryKey(authId);
	}

	/**
	 * Returns the service authorization with the primary key.
	 *
	 * @param authId the primary key of the service authorization
	 * @return the service authorization
	 * @throws PortalException if a service authorization with the primary key could not be found
	 * @throws SystemException if a system exception occurred
	 */
	@Override
	public ServiceAuthorization getServiceAuthorization(long authId)
		throws PortalException, SystemException {
		return serviceAuthorizationPersistence.findByPrimaryKey(authId);
	}

	@Override
	public PersistedModel getPersistedModel(Serializable primaryKeyObj)
		throws PortalException, SystemException {
		return serviceAuthorizationPersistence.findByPrimaryKey(primaryKeyObj);
	}

	/**
	 * Returns a range of all the service authorizations.
	 *
	 * <p>
	 * Useful when paginating results. Returns a maximum of <code>end - start</code> instances. <code>start</code> and <code>end</code> are not primary keys, they are indexes in the result set. Thus, <code>0</code> refers to the first result in the set. Setting both <code>start</code> and <code>end</code> to {@link com.liferay.portal.kernel.dao.orm.QueryUtil#ALL_POS} will return the full result set. If <code>orderByComparator</code> is specified, then the query will include the given ORDER BY logic. If <code>orderByComparator</code> is absent and pagination is required (<code>start</code> and <code>end</code> are not {@link com.liferay.portal.kernel.dao.orm.QueryUtil#ALL_POS}), then the query will include the default ORDER BY logic from {@link com.liferay.portal.ext.model.impl.ServiceAuthorizationModelImpl}. If both <code>orderByComparator</code> and pagination are absent, for performance reasons, the query will not have an ORDER BY clause and the returned result set will be sorted on by the primary key in an ascending order.
	 * </p>
	 *
	 * @param start the lower bound of the range of service authorizations
	 * @param end the upper bound of the range of service authorizations (not inclusive)
	 * @return the range of service authorizations
	 * @throws SystemException if a system exception occurred
	 */
	@Override
	public List<ServiceAuthorization> getServiceAuthorizations(int start,
		int end) throws SystemException {
		return serviceAuthorizationPersistence.findAll(start, end);
	}

	/**
	 * Returns the number of service authorizations.
	 *
	 * @return the number of service authorizations
	 * @throws SystemException if a system exception occurred
	 */
	@Override
	public int getServiceAuthorizationsCount() throws SystemException {
		return serviceAuthorizationPersistence.countAll();
	}

	/**
	 * Updates the service authorization in the database or adds it if it does not yet exist. Also notifies the appropriate model listeners.
	 *
	 * @param serviceAuthorization the service authorization
	 * @return the service authorization that was updated
	 * @throws SystemException if a system exception occurred
	 */
	@Indexable(type = IndexableType.REINDEX)
	@Override
	public ServiceAuthorization updateServiceAuthorization(
		ServiceAuthorization serviceAuthorization) throws SystemException {
		return serviceAuthorizationPersistence.update(serviceAuthorization);
	}

	/**
	 * Returns the filter group local service.
	 *
	 * @return the filter group local service
	 */
	public com.liferay.portal.ext.service.FilterGroupLocalService getFilterGroupLocalService() {
		return filterGroupLocalService;
	}

	/**
	 * Sets the filter group local service.
	 *
	 * @param filterGroupLocalService the filter group local service
	 */
	public void setFilterGroupLocalService(
		com.liferay.portal.ext.service.FilterGroupLocalService filterGroupLocalService) {
		this.filterGroupLocalService = filterGroupLocalService;
	}

	/**
	 * Returns the filter group persistence.
	 *
	 * @return the filter group persistence
	 */
	public FilterGroupPersistence getFilterGroupPersistence() {
		return filterGroupPersistence;
	}

	/**
	 * Sets the filter group persistence.
	 *
	 * @param filterGroupPersistence the filter group persistence
	 */
	public void setFilterGroupPersistence(
		FilterGroupPersistence filterGroupPersistence) {
		this.filterGroupPersistence = filterGroupPersistence;
	}

	/**
	 * Returns the filter scope local service.
	 *
	 * @return the filter scope local service
	 */
	public com.liferay.portal.ext.service.FilterScopeLocalService getFilterScopeLocalService() {
		return filterScopeLocalService;
	}

	/**
	 * Sets the filter scope local service.
	 *
	 * @param filterScopeLocalService the filter scope local service
	 */
	public void setFilterScopeLocalService(
		com.liferay.portal.ext.service.FilterScopeLocalService filterScopeLocalService) {
		this.filterScopeLocalService = filterScopeLocalService;
	}

	/**
	 * Returns the filter scope persistence.
	 *
	 * @return the filter scope persistence
	 */
	public FilterScopePersistence getFilterScopePersistence() {
		return filterScopePersistence;
	}

	/**
	 * Sets the filter scope persistence.
	 *
	 * @param filterScopePersistence the filter scope persistence
	 */
	public void setFilterScopePersistence(
		FilterScopePersistence filterScopePersistence) {
		this.filterScopePersistence = filterScopePersistence;
	}

	/**
	 * Returns the model connection entry local service.
	 *
	 * @return the model connection entry local service
	 */
	public com.liferay.portal.ext.service.ModelConnectionEntryLocalService getModelConnectionEntryLocalService() {
		return modelConnectionEntryLocalService;
	}

	/**
	 * Sets the model connection entry local service.
	 *
	 * @param modelConnectionEntryLocalService the model connection entry local service
	 */
	public void setModelConnectionEntryLocalService(
		com.liferay.portal.ext.service.ModelConnectionEntryLocalService modelConnectionEntryLocalService) {
		this.modelConnectionEntryLocalService = modelConnectionEntryLocalService;
	}

	/**
	 * Returns the model connection entry remote service.
	 *
	 * @return the model connection entry remote service
	 */
	public com.liferay.portal.ext.service.ModelConnectionEntryService getModelConnectionEntryService() {
		return modelConnectionEntryService;
	}

	/**
	 * Sets the model connection entry remote service.
	 *
	 * @param modelConnectionEntryService the model connection entry remote service
	 */
	public void setModelConnectionEntryService(
		com.liferay.portal.ext.service.ModelConnectionEntryService modelConnectionEntryService) {
		this.modelConnectionEntryService = modelConnectionEntryService;
	}

	/**
	 * Returns the model connection entry persistence.
	 *
	 * @return the model connection entry persistence
	 */
	public ModelConnectionEntryPersistence getModelConnectionEntryPersistence() {
		return modelConnectionEntryPersistence;
	}

	/**
	 * Sets the model connection entry persistence.
	 *
	 * @param modelConnectionEntryPersistence the model connection entry persistence
	 */
	public void setModelConnectionEntryPersistence(
		ModelConnectionEntryPersistence modelConnectionEntryPersistence) {
		this.modelConnectionEntryPersistence = modelConnectionEntryPersistence;
	}

	/**
	 * Returns the model connection line local service.
	 *
	 * @return the model connection line local service
	 */
	public com.liferay.portal.ext.service.ModelConnectionLineLocalService getModelConnectionLineLocalService() {
		return modelConnectionLineLocalService;
	}

	/**
	 * Sets the model connection line local service.
	 *
	 * @param modelConnectionLineLocalService the model connection line local service
	 */
	public void setModelConnectionLineLocalService(
		com.liferay.portal.ext.service.ModelConnectionLineLocalService modelConnectionLineLocalService) {
		this.modelConnectionLineLocalService = modelConnectionLineLocalService;
	}

	/**
	 * Returns the model connection line remote service.
	 *
	 * @return the model connection line remote service
	 */
	public com.liferay.portal.ext.service.ModelConnectionLineService getModelConnectionLineService() {
		return modelConnectionLineService;
	}

	/**
	 * Sets the model connection line remote service.
	 *
	 * @param modelConnectionLineService the model connection line remote service
	 */
	public void setModelConnectionLineService(
		com.liferay.portal.ext.service.ModelConnectionLineService modelConnectionLineService) {
		this.modelConnectionLineService = modelConnectionLineService;
	}

	/**
	 * Returns the model connection line persistence.
	 *
	 * @return the model connection line persistence
	 */
	public ModelConnectionLinePersistence getModelConnectionLinePersistence() {
		return modelConnectionLinePersistence;
	}

	/**
	 * Sets the model connection line persistence.
	 *
	 * @param modelConnectionLinePersistence the model connection line persistence
	 */
	public void setModelConnectionLinePersistence(
		ModelConnectionLinePersistence modelConnectionLinePersistence) {
		this.modelConnectionLinePersistence = modelConnectionLinePersistence;
	}

	/**
	 * Returns the service authorization local service.
	 *
	 * @return the service authorization local service
	 */
	public com.liferay.portal.ext.service.ServiceAuthorizationLocalService getServiceAuthorizationLocalService() {
		return serviceAuthorizationLocalService;
	}

	/**
	 * Sets the service authorization local service.
	 *
	 * @param serviceAuthorizationLocalService the service authorization local service
	 */
	public void setServiceAuthorizationLocalService(
		com.liferay.portal.ext.service.ServiceAuthorizationLocalService serviceAuthorizationLocalService) {
		this.serviceAuthorizationLocalService = serviceAuthorizationLocalService;
	}

	/**
	 * Returns the service authorization persistence.
	 *
	 * @return the service authorization persistence
	 */
	public ServiceAuthorizationPersistence getServiceAuthorizationPersistence() {
		return serviceAuthorizationPersistence;
	}

	/**
	 * Sets the service authorization persistence.
	 *
	 * @param serviceAuthorizationPersistence the service authorization persistence
	 */
	public void setServiceAuthorizationPersistence(
		ServiceAuthorizationPersistence serviceAuthorizationPersistence) {
		this.serviceAuthorizationPersistence = serviceAuthorizationPersistence;
	}

	/**
	 * Returns the service history local service.
	 *
	 * @return the service history local service
	 */
	public com.liferay.portal.ext.service.ServiceHistoryLocalService getServiceHistoryLocalService() {
		return serviceHistoryLocalService;
	}

	/**
	 * Sets the service history local service.
	 *
	 * @param serviceHistoryLocalService the service history local service
	 */
	public void setServiceHistoryLocalService(
		com.liferay.portal.ext.service.ServiceHistoryLocalService serviceHistoryLocalService) {
		this.serviceHistoryLocalService = serviceHistoryLocalService;
	}

	/**
	 * Returns the service history persistence.
	 *
	 * @return the service history persistence
	 */
	public ServiceHistoryPersistence getServiceHistoryPersistence() {
		return serviceHistoryPersistence;
	}

	/**
	 * Sets the service history persistence.
	 *
	 * @param serviceHistoryPersistence the service history persistence
	 */
	public void setServiceHistoryPersistence(
		ServiceHistoryPersistence serviceHistoryPersistence) {
		this.serviceHistoryPersistence = serviceHistoryPersistence;
	}

	/**
	 * Returns the service host local service.
	 *
	 * @return the service host local service
	 */
	public com.liferay.portal.ext.service.ServiceHostLocalService getServiceHostLocalService() {
		return serviceHostLocalService;
	}

	/**
	 * Sets the service host local service.
	 *
	 * @param serviceHostLocalService the service host local service
	 */
	public void setServiceHostLocalService(
		com.liferay.portal.ext.service.ServiceHostLocalService serviceHostLocalService) {
		this.serviceHostLocalService = serviceHostLocalService;
	}

	/**
	 * Returns the service host persistence.
	 *
	 * @return the service host persistence
	 */
	public ServiceHostPersistence getServiceHostPersistence() {
		return serviceHostPersistence;
	}

	/**
	 * Sets the service host persistence.
	 *
	 * @param serviceHostPersistence the service host persistence
	 */
	public void setServiceHostPersistence(
		ServiceHostPersistence serviceHostPersistence) {
		this.serviceHostPersistence = serviceHostPersistence;
	}

	/**
	 * Returns the service param local service.
	 *
	 * @return the service param local service
	 */
	public com.liferay.portal.ext.service.ServiceParamLocalService getServiceParamLocalService() {
		return serviceParamLocalService;
	}

	/**
	 * Sets the service param local service.
	 *
	 * @param serviceParamLocalService the service param local service
	 */
	public void setServiceParamLocalService(
		com.liferay.portal.ext.service.ServiceParamLocalService serviceParamLocalService) {
		this.serviceParamLocalService = serviceParamLocalService;
	}

	/**
	 * Returns the service param persistence.
	 *
	 * @return the service param persistence
	 */
	public ServiceParamPersistence getServiceParamPersistence() {
		return serviceParamPersistence;
	}

	/**
	 * Sets the service param persistence.
	 *
	 * @param serviceParamPersistence the service param persistence
	 */
	public void setServiceParamPersistence(
		ServiceParamPersistence serviceParamPersistence) {
		this.serviceParamPersistence = serviceParamPersistence;
	}

	/**
	 * Returns the service publish def local service.
	 *
	 * @return the service publish def local service
	 */
	public com.liferay.portal.ext.service.ServicePublishDefLocalService getServicePublishDefLocalService() {
		return servicePublishDefLocalService;
	}

	/**
	 * Sets the service publish def local service.
	 *
	 * @param servicePublishDefLocalService the service publish def local service
	 */
	public void setServicePublishDefLocalService(
		com.liferay.portal.ext.service.ServicePublishDefLocalService servicePublishDefLocalService) {
		this.servicePublishDefLocalService = servicePublishDefLocalService;
	}

	/**
	 * Returns the service publish def persistence.
	 *
	 * @return the service publish def persistence
	 */
	public ServicePublishDefPersistence getServicePublishDefPersistence() {
		return servicePublishDefPersistence;
	}

	/**
	 * Sets the service publish def persistence.
	 *
	 * @param servicePublishDefPersistence the service publish def persistence
	 */
	public void setServicePublishDefPersistence(
		ServicePublishDefPersistence servicePublishDefPersistence) {
		this.servicePublishDefPersistence = servicePublishDefPersistence;
	}

	/**
	 * Returns the service remote def local service.
	 *
	 * @return the service remote def local service
	 */
	public com.liferay.portal.ext.service.ServiceRemoteDefLocalService getServiceRemoteDefLocalService() {
		return serviceRemoteDefLocalService;
	}

	/**
	 * Sets the service remote def local service.
	 *
	 * @param serviceRemoteDefLocalService the service remote def local service
	 */
	public void setServiceRemoteDefLocalService(
		com.liferay.portal.ext.service.ServiceRemoteDefLocalService serviceRemoteDefLocalService) {
		this.serviceRemoteDefLocalService = serviceRemoteDefLocalService;
	}

	/**
	 * Returns the service remote def persistence.
	 *
	 * @return the service remote def persistence
	 */
	public ServiceRemoteDefPersistence getServiceRemoteDefPersistence() {
		return serviceRemoteDefPersistence;
	}

	/**
	 * Sets the service remote def persistence.
	 *
	 * @param serviceRemoteDefPersistence the service remote def persistence
	 */
	public void setServiceRemoteDefPersistence(
		ServiceRemoteDefPersistence serviceRemoteDefPersistence) {
		this.serviceRemoteDefPersistence = serviceRemoteDefPersistence;
	}

	/**
	 * Returns the service tag local service.
	 *
	 * @return the service tag local service
	 */
	public com.liferay.portal.ext.service.ServiceTagLocalService getServiceTagLocalService() {
		return serviceTagLocalService;
	}

	/**
	 * Sets the service tag local service.
	 *
	 * @param serviceTagLocalService the service tag local service
	 */
	public void setServiceTagLocalService(
		com.liferay.portal.ext.service.ServiceTagLocalService serviceTagLocalService) {
		this.serviceTagLocalService = serviceTagLocalService;
	}

	/**
	 * Returns the service tag persistence.
	 *
	 * @return the service tag persistence
	 */
	public ServiceTagPersistence getServiceTagPersistence() {
		return serviceTagPersistence;
	}

	/**
	 * Sets the service tag persistence.
	 *
	 * @param serviceTagPersistence the service tag persistence
	 */
	public void setServiceTagPersistence(
		ServiceTagPersistence serviceTagPersistence) {
		this.serviceTagPersistence = serviceTagPersistence;
	}

	/**
	 * Returns the counter local service.
	 *
	 * @return the counter local service
	 */
	public com.liferay.counter.service.CounterLocalService getCounterLocalService() {
		return counterLocalService;
	}

	/**
	 * Sets the counter local service.
	 *
	 * @param counterLocalService the counter local service
	 */
	public void setCounterLocalService(
		com.liferay.counter.service.CounterLocalService counterLocalService) {
		this.counterLocalService = counterLocalService;
	}

	/**
	 * Returns the resource local service.
	 *
	 * @return the resource local service
	 */
	public com.liferay.portal.service.ResourceLocalService getResourceLocalService() {
		return resourceLocalService;
	}

	/**
	 * Sets the resource local service.
	 *
	 * @param resourceLocalService the resource local service
	 */
	public void setResourceLocalService(
		com.liferay.portal.service.ResourceLocalService resourceLocalService) {
		this.resourceLocalService = resourceLocalService;
	}

	/**
	 * Returns the user local service.
	 *
	 * @return the user local service
	 */
	public com.liferay.portal.service.UserLocalService getUserLocalService() {
		return userLocalService;
	}

	/**
	 * Sets the user local service.
	 *
	 * @param userLocalService the user local service
	 */
	public void setUserLocalService(
		com.liferay.portal.service.UserLocalService userLocalService) {
		this.userLocalService = userLocalService;
	}

	/**
	 * Returns the user remote service.
	 *
	 * @return the user remote service
	 */
	public com.liferay.portal.service.UserService getUserService() {
		return userService;
	}

	/**
	 * Sets the user remote service.
	 *
	 * @param userService the user remote service
	 */
	public void setUserService(
		com.liferay.portal.service.UserService userService) {
		this.userService = userService;
	}

	/**
	 * Returns the user persistence.
	 *
	 * @return the user persistence
	 */
	public UserPersistence getUserPersistence() {
		return userPersistence;
	}

	/**
	 * Sets the user persistence.
	 *
	 * @param userPersistence the user persistence
	 */
	public void setUserPersistence(UserPersistence userPersistence) {
		this.userPersistence = userPersistence;
	}

	/**
	 * Returns the user finder.
	 *
	 * @return the user finder
	 */
	public UserFinder getUserFinder() {
		return userFinder;
	}

	/**
	 * Sets the user finder.
	 *
	 * @param userFinder the user finder
	 */
	public void setUserFinder(UserFinder userFinder) {
		this.userFinder = userFinder;
	}

	public void afterPropertiesSet() {
		persistedModelLocalServiceRegistry.register("com.liferay.portal.ext.model.ServiceAuthorization",
			serviceAuthorizationLocalService);
	}

	public void destroy() {
		persistedModelLocalServiceRegistry.unregister(
			"com.liferay.portal.ext.model.ServiceAuthorization");
	}

	/**
	 * Returns the Spring bean ID for this bean.
	 *
	 * @return the Spring bean ID for this bean
	 */
	@Override
	public String getBeanIdentifier() {
		return _beanIdentifier;
	}

	/**
	 * Sets the Spring bean ID for this bean.
	 *
	 * @param beanIdentifier the Spring bean ID for this bean
	 */
	@Override
	public void setBeanIdentifier(String beanIdentifier) {
		_beanIdentifier = beanIdentifier;
	}

	protected Class<?> getModelClass() {
		return ServiceAuthorization.class;
	}

	protected String getModelClassName() {
		return ServiceAuthorization.class.getName();
	}

	/**
	 * Performs an SQL query.
	 *
	 * @param sql the sql query
	 */
	protected void runSQL(String sql) throws SystemException {
		try {
			DataSource dataSource = serviceAuthorizationPersistence.getDataSource();

			SqlUpdate sqlUpdate = SqlUpdateFactoryUtil.getSqlUpdate(dataSource,
					sql, new int[0]);

			sqlUpdate.update();
		}
		catch (Exception e) {
			throw new SystemException(e);
		}
	}

	@BeanReference(type = com.liferay.portal.ext.service.FilterGroupLocalService.class)
	protected com.liferay.portal.ext.service.FilterGroupLocalService filterGroupLocalService;
	@BeanReference(type = FilterGroupPersistence.class)
	protected FilterGroupPersistence filterGroupPersistence;
	@BeanReference(type = com.liferay.portal.ext.service.FilterScopeLocalService.class)
	protected com.liferay.portal.ext.service.FilterScopeLocalService filterScopeLocalService;
	@BeanReference(type = FilterScopePersistence.class)
	protected FilterScopePersistence filterScopePersistence;
	@BeanReference(type = com.liferay.portal.ext.service.ModelConnectionEntryLocalService.class)
	protected com.liferay.portal.ext.service.ModelConnectionEntryLocalService modelConnectionEntryLocalService;
	@BeanReference(type = com.liferay.portal.ext.service.ModelConnectionEntryService.class)
	protected com.liferay.portal.ext.service.ModelConnectionEntryService modelConnectionEntryService;
	@BeanReference(type = ModelConnectionEntryPersistence.class)
	protected ModelConnectionEntryPersistence modelConnectionEntryPersistence;
	@BeanReference(type = com.liferay.portal.ext.service.ModelConnectionLineLocalService.class)
	protected com.liferay.portal.ext.service.ModelConnectionLineLocalService modelConnectionLineLocalService;
	@BeanReference(type = com.liferay.portal.ext.service.ModelConnectionLineService.class)
	protected com.liferay.portal.ext.service.ModelConnectionLineService modelConnectionLineService;
	@BeanReference(type = ModelConnectionLinePersistence.class)
	protected ModelConnectionLinePersistence modelConnectionLinePersistence;
	@BeanReference(type = com.liferay.portal.ext.service.ServiceAuthorizationLocalService.class)
	protected com.liferay.portal.ext.service.ServiceAuthorizationLocalService serviceAuthorizationLocalService;
	@BeanReference(type = ServiceAuthorizationPersistence.class)
	protected ServiceAuthorizationPersistence serviceAuthorizationPersistence;
	@BeanReference(type = com.liferay.portal.ext.service.ServiceHistoryLocalService.class)
	protected com.liferay.portal.ext.service.ServiceHistoryLocalService serviceHistoryLocalService;
	@BeanReference(type = ServiceHistoryPersistence.class)
	protected ServiceHistoryPersistence serviceHistoryPersistence;
	@BeanReference(type = com.liferay.portal.ext.service.ServiceHostLocalService.class)
	protected com.liferay.portal.ext.service.ServiceHostLocalService serviceHostLocalService;
	@BeanReference(type = ServiceHostPersistence.class)
	protected ServiceHostPersistence serviceHostPersistence;
	@BeanReference(type = com.liferay.portal.ext.service.ServiceParamLocalService.class)
	protected com.liferay.portal.ext.service.ServiceParamLocalService serviceParamLocalService;
	@BeanReference(type = ServiceParamPersistence.class)
	protected ServiceParamPersistence serviceParamPersistence;
	@BeanReference(type = com.liferay.portal.ext.service.ServicePublishDefLocalService.class)
	protected com.liferay.portal.ext.service.ServicePublishDefLocalService servicePublishDefLocalService;
	@BeanReference(type = ServicePublishDefPersistence.class)
	protected ServicePublishDefPersistence servicePublishDefPersistence;
	@BeanReference(type = com.liferay.portal.ext.service.ServiceRemoteDefLocalService.class)
	protected com.liferay.portal.ext.service.ServiceRemoteDefLocalService serviceRemoteDefLocalService;
	@BeanReference(type = ServiceRemoteDefPersistence.class)
	protected ServiceRemoteDefPersistence serviceRemoteDefPersistence;
	@BeanReference(type = com.liferay.portal.ext.service.ServiceTagLocalService.class)
	protected com.liferay.portal.ext.service.ServiceTagLocalService serviceTagLocalService;
	@BeanReference(type = ServiceTagPersistence.class)
	protected ServiceTagPersistence serviceTagPersistence;
	@BeanReference(type = com.liferay.counter.service.CounterLocalService.class)
	protected com.liferay.counter.service.CounterLocalService counterLocalService;
	@BeanReference(type = com.liferay.portal.service.ResourceLocalService.class)
	protected com.liferay.portal.service.ResourceLocalService resourceLocalService;
	@BeanReference(type = com.liferay.portal.service.UserLocalService.class)
	protected com.liferay.portal.service.UserLocalService userLocalService;
	@BeanReference(type = com.liferay.portal.service.UserService.class)
	protected com.liferay.portal.service.UserService userService;
	@BeanReference(type = UserPersistence.class)
	protected UserPersistence userPersistence;
	@BeanReference(type = UserFinder.class)
	protected UserFinder userFinder;
	@BeanReference(type = PersistedModelLocalServiceRegistry.class)
	protected PersistedModelLocalServiceRegistry persistedModelLocalServiceRegistry;
	private String _beanIdentifier;
}